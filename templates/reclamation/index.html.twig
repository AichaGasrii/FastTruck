{% extends app.user.roles == 'ROLE_ADMIN'
    ? 'personnel/index.html.twig'
    : 'admin/index.html.twig' %}

{% block title %}Reclamation index
{% endblock %}

{% block body %}
    <link rel="stylesheet" href="https://maxst.icons8.com/vue-static/landings/line-awesome/line-awesome/1.3.0/css/line-awesome.min.css">

    </div>
    <h1>Reclamation index</h1>
    <h1>Tri par date</h1>
    <a href="{{ path('indextri') }}" class="btn btn-primary"></a>
    <table class="table">
        <thead>
        <tr>
            <th>Id</th>
            <th>Nom</th>

            <th>Description</th>


            <th>Date</th>
            <th>Email</th>
            <th>etat</th>
            <th>actions</th>
            <th>Rating</th>

        </tr>
        </thead>

        <tbody>
        {% for reclamation in reclamations %}
            <tr>
                <td>{{ reclamation.id }}</td>
                <td>{{ reclamation.nom }}</td>
                <td>{{ reclamation.description }}</td>
                <td>{{ reclamation.date ? reclamation.date|date('Y-m-d') : '' }}</td>
                <td>{{ reclamation.email }}</td>
                {% if reclamation.etat == 0 %}
                    <td><label class="badge badge-warning">En cours</label></td>
                {% elseif reclamation.etat == 1 %}
                    <td><label class="badge badge-success">validé</label></td>
                {% else %}
                    <td><label class="badge badge-danger">Refusé</label></td>
                {% endif %}
                <td>
                    <a href="{{ path('reclamation_show', {'id': reclamation.id}) }}">show</a>
                    <a href="{{ path('reclamation_edit', {'id': reclamation.id}) }}">edit</a>
                    <a href="{{ path('reclamation_delete', {'id': reclamation.id}) }}">delete</a>

                </td>
                <td>
                    <form action="">
                        <div class="stars">
                            <i class="lar la-star" data-value="1"></i><i class="lar la-star" data-value="2"></i><i class="lar la-star" data-value="3"></i><i class="lar la-star" data-value="4"></i><i class="lar la-star" data-value="5"></i>
                        </div>
                        <input type="hidden" name="note" id="note" value="0">
                    </form>
                </td>


            </tr>
        {% else %}
            <tr>
                <td colspan="7">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
    <a href="{{ path('reclamation_new') }}">Create new</a>
<script>
    window.onload = (event) => {
        // On va chercher toutes les étoiles
        const stars = document.querySelectorAll(".la-star");

        // On va chercher l'input
        const note = document.querySelector("#note");

        // On boucle sur les étoiles pour le ajouter des écouteurs d'évènements
        for(star of stars){
            // On écoute le survol
            star.addEventListener("mouseover", function(){
                resetStars();
                this.style.color = "red";
                this.classList.add("las");
                this.classList.remove("lar");
                // L'élément précédent dans le DOM (de même niveau, balise soeur)
                let previousStar = this.previousElementSibling;

                while(previousStar){
                    // On passe l'étoile qui précède en rouge
                    previousStar.style.color = "red";
                    previousStar.classList.add("las");
                    previousStar.classList.remove("lar");
                    // On récupère l'étoile qui la précède
                    previousStar = previousStar.previousElementSibling;
                }
            });

            // On écoute le clic
            star.addEventListener("click", function(){
                note.value = this.dataset.value;
            });

            star.addEventListener("mouseout", function(){
                resetStars(note.value);
            });
        }

        /**
         * Reset des étoiles en vérifiant la note dans l'input caché
         * @param {number} note
         */
        function resetStars(note = 0){
            for(star of stars){
                if(star.dataset.value > note){
                    star.style.color = "black";
                    star.classList.add("lar");
                    star.classList.remove("las");
                }else{
                    star.style.color = "red";
                    star.classList.add("las");
                    star.classList.remove("lar");
                }
            }
        }
    };
</script>
    {% endblock %}